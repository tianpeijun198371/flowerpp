package com.ulearning.ulms.content.schoolbook.model.dao;

import net.sf.hibernate.Criteria;
import net.sf.hibernate.HibernateException;
import net.sf.hibernate.Query;
import net.sf.hibernate.expression.Criterion;
import net.sf.hibernate.expression.Order;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import java.util.List;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public abstract class _RootDAO extends com.ulearning.ulms.content.schoolbook.model.base._BaseRootDAO
{
        private static final Log log = LogFactory.getLog(_RootDAO.class);

        public int count(String hsql, String countTarget)
        {
                log.debug("inside count(*)!");

                int count = 0;
                String countHsql = "select " +
                        ((countTarget == null) ? "count(*)" : countTarget) + " " + hsql;

                try
                {
                        Query query = createQuery(countHsql).setCacheable(true);
                        List list = query.list();

                        if (list.size() > 0)
                        {
                                count = Integer.parseInt(list.get(0).toString());
                        }
                }
                catch (Exception ex)
                {
                        ex.printStackTrace();
                }
                finally
                {
                        try
                        {
                                super.closeSession();
                        }
                        catch (HibernateException e)
                        {
                                // ignore
                        }
                }

                return count;
        }

        //必需调用时关闭Session
        public Query createQuery(String arg) throws HibernateException
        {
                return super.getSession().createQuery(arg);
        }

        public List list(int count, int index, Criterion[] condictions,
                         Order[] orders)
        {
                log.debug("inside list!");

                List list = null;

                try
                {
                        Criteria c = super.createCriteria();

                        for (int i = 0; (condictions != null) && (i < condictions.length);
                             i++)
                        {
                                c.add(condictions[i]);
                        }

                        for (int i = 0; (orders != null) && (i < orders.length); i++)
                        {
                                c.addOrder(orders[i]);
                        }

                        if (index > 0)
                        {
                                c.setFirstResult((index - 1) * count);
                        }

                        if (count > 0)
                        {
                                c.setMaxResults(count);
                        }

                        list = c.setCacheable(true).list();
                }
                catch (Exception ex)
                {
                        log.error("RootDAO list error !!", ex);
                }
                finally
                {
                        try
                        {
                                super.closeSession();
                        }
                        catch (HibernateException e)
                        {
                                // ignore
                        }
                }

                return list;
        }
}
